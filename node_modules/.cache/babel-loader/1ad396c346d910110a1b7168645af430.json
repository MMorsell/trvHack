{"ast":null,"code":"var _jsxFileName = \"/Users/trafikverket/Desktop/trv/trvHack/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mapboxgl from \"mapbox-gl\";\nmapboxgl.accessToken = \"pk.eyJ1IjoibW1vcnNlbGwiLCJhIjoiY2syeGZwOXFhMG55eTNjbHFpYjVrbngyMCJ9.eg9D5CWK4Ovb1lYVbGcg3A\";\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 17.5695,\n      lat: 61.5578,\n      zoom: 4\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mmorsell/ck2xg0hf21ow41dtdntnyp410\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    }); // var bounds = [[17.5695, 61.5578], [17.5695, 61.5578]];\n    // map.setMaxBounds(bounds);\n\n    var start = [-122.662323, 45.523751];\n    map.on(\"move\", () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n    map.on('load', function () {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start); // Add starting point to the map\n\n      map.addLayer({\n        id: 'point',\n        type: 'circle',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'Point',\n                coordinates: start\n              }\n            }]\n          }\n        },\n        paint: {\n          'circle-radius': 10,\n          'circle-color': '#3887be'\n        }\n      }); // this is where the code from the next step will go\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom:\", \" \", this.state.zoom)), React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Application, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), document.getElementById(\"app\"));","map":{"version":3,"sources":["/Users/trafikverket/Desktop/trv/trvHack/src/index.js"],"names":["React","ReactDOM","mapboxgl","accessToken","Application","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","start","on","setState","getCenter","toFixed","getZoom","getRoute","addLayer","id","type","source","data","features","properties","geometry","coordinates","paint","render","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mapboxgl from \"mapbox-gl\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoibW1vcnNlbGwiLCJhIjoiY2syeGZwOXFhMG55eTNjbHFpYjVrbngyMCJ9.eg9D5CWK4Ovb1lYVbGcg3A\";\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 17.5695 ,\n      lat: 61.5578,\n      zoom: 4\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mmorsell/ck2xg0hf21ow41dtdntnyp410\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    // var bounds = [[17.5695, 61.5578], [17.5695, 61.5578]];\n    // map.setMaxBounds(bounds);\n\n    var start = [-122.662323, 45.523751];\n\n    map.on(\"move\", () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n\n    map.on('load', function() {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start);\n    \n      // Add starting point to the map\n      map.addLayer({\n        id: 'point',\n        type: 'circle',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'Point',\n                coordinates: start\n              }\n            }\n            ]\n          }\n        },\n        paint: {\n          'circle-radius': 10,\n          'circle-color': '#3887be'\n        }\n      });\n      // this is where the code from the next step will go\n    });\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"sidebarStyle\">\n          <div>\n            Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n            {this.state.zoom}\n          </div>\n        </div>\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Application />, document.getElementById(\"app\"));\n"]},"metadata":{},"sourceType":"module"}